function row=SpeRow(fileinfo,rownum)

%row=SifRow(fileinfo,framenum,rownum)
%
%While typically, frame by frame operation is more desireable, sometimes it
%is necessary to know the value of a pixel at all times. Generally, memory
%limitations prohibit reading in all values of all pixels. As a compromise,
%instead of operating upon all pixels at all times, we operate upon a row
%of pixels at all times. 
%
%
%INPUTS:    FILEINFO:   A structure containing pertinent information about
%                       the file, generated by FileDetails.m
%           FRAMENUM:   The index of the frame to be read.
%           ROWNUM:     The y coordinate in the array of the desired row.
%
%
%OUTPUTS:   ROW:     An array, for which each row gives the value of the
%                       selected row at the corresponding frame number
%
%Copyright Stephen Anthony 07/2007 U. Illinois Urbana-Champaign
%Last modified by Stephen Anthony on 06/22/2009

%Open up the desired file.
fid=fopen(fileinfo.location,'r'); 

%Calculate the offset for this pixel
rowoff=(fileinfo.dimX*(rownum-1))*4;

row=zeros(fileinfo.Nframes,fileinfo.dimX);

for ii = 1: fileinfo.Nframes 
    newpos=4100+fileinfo.dimX*fileinfo.dimY*(ii-1)*fileinfo.bits/8+rowoff;
    %Adjust the position to the desired positions
    fseek(fid,newpos,-1);

    %Read in the pixels
    if fileinfo.bits==16
        %Read in 16-bit
        row(1,:)=double(fread(fid,(fileinfo.dimX),'uint16=>uint16'));
    elseif fileinfo.bits==32
        %Read in the 32-bit frame
        row(1,:)=double(fread(fid,(fileinfo.dimX),'uint32=>uint32'));
    else
        error('Unsupported number of bits')
    end
end

%For the 32 bit file format, negative values are stored as
%2^32+whatever the negative value is. Compensate. This may be
%equivalent to int32, the signed version of uint32 (untested). 
row(row>(2^31))=row(row>(2^31))-2^32;

%Close the file
fclose(fid);